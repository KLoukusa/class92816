install.packages("Rcmdr",repos="http://cran.fhcrc.org",dependencies=TRUE)
library(Rcmdr)
q()
install.package("devtools")
install.packages("devtools")
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
opendataviz()
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
install.packages("devtools")
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
httr::set_config( httr::config( ssl_verifypeer = 0L ) )
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
install.packages("ggplot2")
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
install.packages("dplyr")
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
library(gudatavizfa16)
opendataviz()
library(gudatavizfa16)
opendataviz()
library(gudatavizfa16)
opendataviz()
library(gudatavizfa16)
opendataviz()
gudatavizfa16::updatedataviz
gudatavizfa16::updatedataviz()
devtools::install_github("htmlwidgets/sparkline")
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
remove.packages('curl')
install.packages('curl')
install.packages("curl")
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
install.packages("curl")
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
install.packages(c("curl", "httr"))
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
opendataviz()
opendataviz()
opendataviz()
opendataviz()
---
---
opendataviz()
opendataviz()
getwd()
You can also embed plots, for example:
```{r pressure, echo=FALSE}
---
title: "My First Markdown"
author: "Kaari Loukusa"
date: "September 7, 2016"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
---
source('C:/Users/Kaari/Desktop/Gonzaga/Fall 2016/MKTG420/Assignments/Article Summary 2/try1.R')
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
opendataviz()
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
opendataviz()
plot(iris$Sepal.Length)
plot(iris$Sepal.Width)
plot(iris$Sepal.Length)
plot(iris$Sepal.Length)
plot(iris$Sepal.Width)
?iris
plot(Sepal.Length)
library(ggplot2)
ggplot(iris.aes(Sepal.Length, y=1))+geom_point()
ggplot(iris.aes(Sepal.Length,Sepal.Width))+geom_point()
ggplot(iris,aes(Sepal.Length,Sepal.Width))+geom_point()
ggplot(iris,aes(Sepal.Length, y=1))+geom_point()
dim(iris)
dim(iris)
nrow(iris)
ncol(iris)
names(iris) # colnames(iris) also gives that information
head(iris)
head(iris,2) # alternately, can use iris[1:2,]
tail(iris) # Number of rows can be controlled, see earlier example involving the head command
names(iris)[3]
str(iris)
summary(iris) # for factor/categorical variables, this gives a count of all categories
dim(mtcars)
names(mtcars)
str(mtcars)
attributes(mtcars)
head(mtcars)
tail(mtcars)
summary(mtcars)
quartile(mtcars)
quantile(mtcars)
var(mtcars)
hist(mtcars)
hist(mtcars$mpg)
hist(mtcars$cyl)
hist(mtcars$drat)
plot(mtcars$mpg)
plot(density(mtcars$disp))
table(mtcars$cyl)
table(mtcars$mpg)
barplot(mtcars$mpg)
barplot(mtcars$cyl)
barplot(mtcars$wt)
dim(mtcars)
cov(mtcars$mpg, mtcars$disp)
attributes(mtcars)
summary(cars)
var(mtcars)
table(mtcars$cyl)
plot(density(mtcars$disp))
table(mtcars$mpg)
barplot(mtcars$cyl)
barplot(mtcars$mpg)
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
opendataviz()
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
opendataviz()
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
opendataviz()
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
opendataviz()
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
opendataviz()
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
opendataviz()
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
library(gudatavizfa16)
opendataviz()
getwd()
setwd("C:/Users/Kaari/Desktop/Gonzaga/Fall 2016/MKTG420/R Data/RMarkdownTemplate/class92816")
mydiamonds=read.csv("diamonds.csv")
View(mydiamonds)
dim(mydiamonds)
dim(mydiamonds)
nrow(mydiamonds)
ncol(mydiamonds)
colnames(mydiamonds)
colnames(mydiamonds)
df[,-1]
colnames(mydiamonds)
colnames(mydiamonds[,-1])
colnames(mydiamonds)
mydiamonds=mydiamonds[,2:11]
colnames(mydiamonds)
mydiamonds=mydiamonds[,2:11]
colnames(mydiamonds)
mydiamonds=(mydiamonds[,2:11])
colnames(mydiamonds)
mydiamonds=mydiamonds[,2:11]
colnames(mydiamonds)
mydiamonds=mydiamonds[,-1]
colnames(mydiamonds)
mydiamonds=mydiamonds[,2:11]
colnames(mydiamonds)
mydiamonds=mydiamonds[,2:10]
colnames(mydiamonds)
mydiamonds=mydiamonds[,2:9]
colnames(mydiamonds)
mydiamonds=mydiamonds[,2:11]
colnames(mydiamonds)
str(mydiamonds)
save(mydiamonds,file="mydiamonds.Rda")
str(mydiamonds)
View(mydiamonds)
?mydiamonds
?ggplot2::diamonds
colnames(mydiamonds)
mydiamonds=mydiamonds[,2:11]
colnames(mydiamonds)
mydiamonds=mydiamonds[,2:11]
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
mydiamonds=read.csv("diamonds.csv")
# Chunk 3
dim(mydiamonds)
nrow(mydiamonds)
ncol(mydiamonds)
# Chunk 4
colnames(mydiamonds)
mydiamonds=mydiamonds[,2:11]
summary(mydiamonds)
nlevel(mydiamonds$clarity)
nlevels(mydiamonds$clarity)
levels(mydiamonds$clarity)
summary(mydiamonds)[,c("carat","cut")])
summary(mydiamonds[,c("carat","cut")])
summary(mydiamonds[,c(1,3)])
nlevels(mydiamonds$clarity)
levels(mydiamonds$clarity)
fairdiamonds=mydiamonds[mydiamonds$cut=="Fair".]
fairdiamonds=mydiamonds[mydiamonds$cut=="Fair",]
levels(fairdiamonds$cut)
summary(fairdiamonds$cut)
fairdiamonds$cut=factor(fairdiamonds$cut)
fairdiamonds$cut=factor(fairdiamonds$cut)
summary(fairdiamonds$cut)
